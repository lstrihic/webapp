// Code generated by ent, DO NOT EDIT.

package entity

import (
	"time"

	"github.com/lstrihic/webapp/adapter/db/entity/session"
	"github.com/lstrihic/webapp/adapter/db/entity/user"
	"github.com/lstrihic/webapp/adapter/db/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescToken is the schema descriptor for token field.
	sessionDescToken := sessionFields[0].Descriptor()
	// session.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	session.TokenValidator = sessionDescToken.Validators[0].(func(string) error)
	// sessionDescIsValid is the schema descriptor for is_valid field.
	sessionDescIsValid := sessionFields[2].Descriptor()
	// session.DefaultIsValid holds the default value on creation for the is_valid field.
	session.DefaultIsValid = sessionDescIsValid.Default.(bool)
	// sessionDescCreatedAt is the schema descriptor for created_at field.
	sessionDescCreatedAt := sessionFields[3].Descriptor()
	// session.DefaultCreatedAt holds the default value on creation for the created_at field.
	session.DefaultCreatedAt = sessionDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[0].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[1].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescIsBanned is the schema descriptor for is_banned field.
	userDescIsBanned := userFields[4].Descriptor()
	// user.DefaultIsBanned holds the default value on creation for the is_banned field.
	user.DefaultIsBanned = userDescIsBanned.Default.(bool)
}
